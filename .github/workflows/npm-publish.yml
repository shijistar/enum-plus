name: Publish to npm

on:
  release:
    types: [created]

permissions:
  contents: write
  packages: write
  actions: read
  statuses: write

jobs:
  run-unit-tests:
    uses: ./.github/workflows/reusable-test.yml
    with:
      use-matrix: true

  publish-npm:
    needs: run-unit-tests
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Use Node.js ${{ vars.DEFAULT_NODE_VERSION }}
        uses: actions/setup-node@v4
        with:
          node-version: ${{ vars.DEFAULT_NODE_VERSION }}
          cache: 'npm'
          cache-dependency-path: '**/package-lock.json'

      - name: Try to restore modern node_modules cache
        id: node_modules_cache
        uses: actions/cache@v4
        with:
          path: node_modules
          key: ${{ runner.os }}-modern-node-modules-${{ hashFiles('**/package-lock.json') }}

      - name: Install dependencies
        if: steps.node_modules_cache.outputs.cache-hit != 'true'
        run: npm ci

      - name: Build package
        run: npm run build

      - name: Run tests
        run: npm test

      - name: Upload coverage reports to Codecov
        uses: codecov/codecov-action@v5
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          slug: shijistar/enum-plus

      - name: Gzip umd files
        run: |
          cp -r umd/ umd-zip/
          mv umd-zip/enum-plus.min.js umd-zip/enum-plus.umd.min.js
          mv umd-zip/enum-plus-legacy.min.js umd-zip/enum-plus-legacy.umd.min.js
          gzip -9 umd-zip/enum-plus.umd.min.js
          gzip -9 umd-zip/enum-plus-legacy.umd.min.js
          cp -r umd/ umd-zip-full/
          mkdir -p umd-zip-full/modern
          mkdir -p umd-zip-full/legacy
          mv umd-zip-full/enum-plus.min.js* umd-zip-full/modern
          mv umd-zip-full/enum-plus-legacy.min.js* umd-zip-full/legacy
          cd umd-zip-full/modern
          tar -cvf ../../enum-plus.umd.tar.gz *
          cd ../legacy
          tar -cvf ../../enum-plus-legacy.umd.tar.gz *
          cd ../..

      - name: Add Assets to Release
        uses: softprops/action-gh-release@v1
        with:
          files: |
            umd-zip/enum-plus.umd.min.js.gz
            umd-zip/enum-plus-legacy.umd.min.js.gz
            enum-plus.umd.tar.gz
            enum-plus-legacy.umd.tar.gz
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: Replace relative image url to cdn.jsdelivr.net
        uses: ./.github/actions/replace-img-url

      - name: Replace download url to the releasing version
        uses: ./.github/actions/replace-path-url
        with:
          version: ${{ github.event.release.tag_name }}

      - name: Request the latest version of enum-plus
        id: get_latest_version_before_publish
        run: |
          VERSION=$(npm view enum-plus version)
          echo "LATEST_VERSION=$VERSION" >> $GITHUB_OUTPUT

      - name: Request the next version of enum-plus
        id: get_next_version_before_publish
        run: |
          VERSION=$(npm view enum-plus@next version || "0.0.0")
          echo "NEXT_VERSION=$VERSION" >> $GITHUB_OUTPUT

      - name: Publish a prerelease version to npm
        run: npm publish --tag beta --ignore-scripts --access=public
        if: github.event.release.prerelease
        env:
          NODE_AUTH_TOKEN: ${{ secrets.npm_token }}

      - name: Publish a regular version to npm
        run: npm publish --ignore-scripts --access=public
        if: github.event.release.prerelease == false
        env:
          NODE_AUTH_TOKEN: ${{ secrets.npm_token }}

      - uses: madhead/semver-utils@latest
        id: new_vs_latest
        with:
          version: ${{ github.event.release.tag_name }}
          compare-to: ${{ steps.get_latest_version_before_publish.outputs.LATEST_VERSION }}

      - uses: madhead/semver-utils@latest
        id: new_vs_next
        with:
          version: ${{ github.event.release.tag_name }}
          compare-to: ${{ steps.get_next_version_before_publish.outputs.NEXT_VERSION }}

      - name: Add npm dist-tag for "next"
        if: github.event.release.prerelease
        run: |
          if [ "${{ steps.new_vs_latest.outputs.comparison-result }}" = ">" ]; then
            npm dist-tag add enum-plus@${{ github.event.release.tag_name }} next --access=public
          fi
        env:
          NODE_AUTH_TOKEN: ${{ secrets.npm_token }}

      - name: Remove npm dist-tag for "next"
        if: github.event.release.prerelease == false
        run: |
          if [ "${{ steps.get_next_version_before_publish.outputs.NEXT_VERSION }}" != "0.0.0" ] && [ "${{ steps.new_vs_next.outputs.comparison-result }}" = ">" ]; then
            npm dist-tag rm enum-plus next --access=public
          fi
        env:
          NODE_AUTH_TOKEN: ${{ secrets.npm_token }}

      - name: Request the latest stable version of enum-plus
        id: get_latest_version_after_publish
        run: |
          VERSION=$(npm view enum-plus version)
          echo "LATEST_VERSION=$VERSION" >> $GITHUB_OUTPUT

      - name: Prepare local master branch
        if: github.event.release.prerelease == false
        run: |
          git add .
          git reset --hard
          git checkout -b master
          git fetch
          git branch -u origin/master
          git pull origin master

      - name: Replace download url to the NPM latest version
        if: github.event.release.prerelease == false
        uses: ./.github/actions/replace-path-url
        with:
          version: ${{ steps.get_latest_version_after_publish.outputs.LATEST_VERSION }}

      - name: Commit and push changes
        if: github.event.release.prerelease == false
        run: |
          if [ -n "$(git diff -- README.zh-CN.md README.md)" ]; then
            git config --local user.name "${{ vars.COMMIT_USER }}"
            git config --local user.email "${{ vars.COMMIT_EMAIL }}"
            git commit -am "docs: update download url for release ${{ github.event.release.tag_name }}"
            git push origin master
          fi
